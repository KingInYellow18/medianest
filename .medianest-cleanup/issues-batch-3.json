{
  "batchInfo": {
    "batch": 3,
    "phase": "A.2",
    "scannedFiles": 13,
    "timestamp": "2025-09-07T02:55:00.000Z",
    "description": "Final batch technical debt scanning - large source files 21-33"
  },
  "fileAnalysis": [
    {
      "file": "tests/security/comprehensive-security-test-suite.ts",
      "lines": 825,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 3,
        "hardcodedValues": 8,
        "disabledTests": 0,
        "complexityIndicators": [
          "JWT manipulation patterns",
          "Multiple auth scenarios",
          "Complex test setup"
        ]
      },
      "technicalDebt": {
        "severity": "medium",
        "priority": "medium",
        "issues": [
          "Hardcoded test credentials and secrets",
          "Complex test setup with multiple authentication scenarios",
          "JWT token manipulation patterns could be abstracted"
        ],
        "recommendations": [
          "Extract hardcoded test values to configuration",
          "Create reusable authentication test helpers",
          "Simplify JWT test pattern creation"
        ]
      }
    },
    {
      "file": "backend/src/services/email.service.ts",
      "lines": 684,
      "issues": {
        "todoFixmeCount": 4,
        "duplicateBlocks": 5,
        "hardcodedValues": 12,
        "disabledTests": 0,
        "complexityIndicators": [
          "Multiple email providers",
          "Template generation",
          "HTML/Text variants"
        ]
      },
      "technicalDebt": {
        "severity": "high",
        "priority": "high",
        "issues": [
          "TODO comments for unimplemented email providers (SMTP, SendGrid, SES)",
          "Duplicated template generation patterns across methods",
          "Hardcoded email template HTML and styling",
          "Large method bodies for template generation"
        ],
        "recommendations": [
          "Implement missing email provider integrations",
          "Extract template generation to separate template service",
          "Move HTML templates to external template files",
          "Create base template class to reduce duplication"
        ]
      }
    },
    {
      "file": "tests/integration/api-gateway-service-coordination-test.ts",
      "lines": 666,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 7,
        "hardcodedValues": 15,
        "disabledTests": 0,
        "complexityIndicators": [
          "Complex service integration",
          "Multiple test scenarios",
          "Service coordination"
        ]
      },
      "technicalDebt": {
        "severity": "medium",
        "priority": "low",
        "issues": [
          "Hardcoded test data and service URLs",
          "Complex test setup with multiple service dependencies",
          "Repetitive service coordination test patterns"
        ],
        "recommendations": [
          "Extract test data to configuration files",
          "Create service coordination test helpers",
          "Simplify integration test scenarios"
        ]
      }
    },
    {
      "file": "tests/integration/helpers/msw-handlers-comprehensive.ts",
      "lines": 647,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 8,
        "hardcodedValues": 25,
        "disabledTests": 0,
        "complexityIndicators": ["Multiple API handlers", "Complex mock data", "Service simulation"]
      },
      "technicalDebt": {
        "severity": "low",
        "priority": "low",
        "issues": [
          "Extensive hardcoded mock data throughout handlers",
          "Duplicated response patterns across different APIs",
          "Large file with multiple concerns (Plex, Overseerr, YouTube, etc.)"
        ],
        "recommendations": [
          "Split handlers into separate files by service",
          "Extract mock data to JSON files",
          "Create reusable response pattern builders"
        ]
      }
    },
    {
      "file": "backend/tests/e2e/auth.spec.ts",
      "lines": 646,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 6,
        "hardcodedValues": 20,
        "disabledTests": 0,
        "complexityIndicators": [
          "Complex authentication flows",
          "Multiple test scenarios",
          "Mock setup"
        ]
      },
      "technicalDebt": {
        "severity": "medium",
        "priority": "medium",
        "issues": [
          "Hardcoded authentication test data",
          "Complex mock setup functions with repetitive patterns",
          "Large test file covering multiple authentication concerns"
        ],
        "recommendations": [
          "Split authentication tests by concern (OAuth, PIN, session, etc.)",
          "Create reusable authentication mock helpers",
          "Extract test data to configuration"
        ]
      }
    },
    {
      "file": "backend/src/services/oauth-providers.service.ts",
      "lines": 638,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 6,
        "hardcodedValues": 8,
        "disabledTests": 0,
        "complexityIndicators": [
          "Multiple OAuth providers",
          "Complex token exchange",
          "State management"
        ]
      },
      "technicalDebt": {
        "severity": "medium",
        "priority": "medium",
        "issues": [
          "@ts-nocheck directive indicates TypeScript issues",
          "In-memory state storage noted for production Redis requirement",
          "Repetitive patterns between GitHub and Google OAuth implementations",
          "Complex state management and cleanup logic"
        ],
        "recommendations": [
          "Remove @ts-nocheck and fix TypeScript issues",
          "Implement Redis-based state storage for production",
          "Abstract common OAuth patterns into base class",
          "Improve error handling and state cleanup"
        ]
      }
    },
    {
      "file": "backend/tests/mocks/handlers.ts",
      "lines": 631,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 10,
        "hardcodedValues": 30,
        "disabledTests": 0,
        "complexityIndicators": ["Multiple service mocks", "Complex mock logic", "State management"]
      },
      "technicalDebt": {
        "severity": "low",
        "priority": "low",
        "issues": [
          "Extensive hardcoded mock response data",
          "Duplicated error handling patterns across handlers",
          "Global mock state management could be improved"
        ],
        "recommendations": [
          "Extract mock data to separate JSON files",
          "Create mock response builders",
          "Implement better mock state management"
        ]
      }
    },
    {
      "file": "backend/src/routes/performance.ts",
      "lines": 626,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 4,
        "hardcodedValues": 15,
        "disabledTests": 0,
        "complexityIndicators": [
          "Complex performance analysis",
          "Database queries",
          "System metrics"
        ]
      },
      "technicalDebt": {
        "severity": "medium",
        "priority": "medium",
        "issues": [
          "@ts-nocheck directive indicates TypeScript issues",
          "Complex Redis conditional import logic with warnings",
          "Hardcoded performance thresholds and limits",
          "Large route methods handling multiple concerns"
        ],
        "recommendations": [
          "Remove @ts-nocheck and fix TypeScript issues",
          "Simplify Redis import/connection logic",
          "Extract performance thresholds to configuration",
          "Split large route handlers into smaller functions"
        ]
      }
    },
    {
      "file": "backend/src/routes/v1/resilience.ts",
      "lines": 605,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 3,
        "hardcodedValues": 10,
        "disabledTests": 0,
        "complexityIndicators": [
          "Complex resilience logic",
          "Circuit breaker management",
          "Health monitoring"
        ]
      },
      "technicalDebt": {
        "severity": "low",
        "priority": "low",
        "issues": [
          "@ts-nocheck directive indicates TypeScript issues",
          "Complex circuit breaker action handling with manual state manipulation",
          "Hardcoded resilience scoring thresholds"
        ],
        "recommendations": [
          "Remove @ts-nocheck and fix TypeScript issues",
          "Simplify circuit breaker action logic",
          "Extract resilience thresholds to configuration"
        ]
      }
    },
    {
      "file": "backend/tests/e2e/media-request.spec.ts",
      "lines": 591,
      "issues": {
        "todoFixmeCount": 0,
        "duplicateBlocks": 5,
        "hardcodedValues": 18,
        "disabledTests": 0,
        "complexityIndicators": [
          "Complex E2E workflows",
          "Multiple test scenarios",
          "Performance testing"
        ]
      },
      "technicalDebt": {
        "severity": "low",
        "priority": "low",
        "issues": [
          "Complex E2E test setup with multiple concerns in single file",
          "Hardcoded test data and performance thresholds",
          "Long test methods with multiple assertion steps"
        ],
        "recommendations": [
          "Split E2E tests by workflow type",
          "Extract test data and thresholds to configuration",
          "Create reusable E2E test helpers and builders"
        ]
      }
    }
  ],
  "summary": {
    "totalFiles": 13,
    "totalLines": 8159,
    "totalTodos": 4,
    "totalDuplicateBlocks": 67,
    "totalHardcodedValues": 176,
    "totalDisabledTests": 0,
    "severityDistribution": {
      "high": 1,
      "medium": 5,
      "low": 7
    },
    "priorityDistribution": {
      "high": 1,
      "medium": 5,
      "low": 7
    },
    "topIssues": [
      "Email service has multiple unimplemented providers (4 TODOs)",
      "Extensive hardcoded test data and mock responses (176 total)",
      "Multiple @ts-nocheck directives indicating TypeScript issues",
      "Complex test files that could be split by concern",
      "In-memory state storage that needs Redis implementation"
    ]
  }
}
