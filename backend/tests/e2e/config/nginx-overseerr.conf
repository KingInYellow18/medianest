server {
    listen 80;
    server_name localhost;
    
    # Health check endpoint
    location /health {
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # API status endpoint
    location /api/v1/status {
        return 200 '{
            "version": "1.33.2",
            "commitTag": "v1.33.2",
            "updateAvailable": false,
            "commitsBehind": 0,
            "restartRequired": false
        }';
        add_header Content-Type application/json;
    }
    
    # API settings endpoint
    location /api/v1/settings/main {
        return 200 '{
<<<<<<< HEAD
            "apiKey": "test-overseerr-api-key",
=======
            "apiKey": "e2e-mock-overseerr-key",
>>>>>>> origin/develop
            "applicationUrl": "http://localhost:5055",
            "csrfProtection": true,
            "hideAvailable": false,
            "localLogin": true,
            "newPlexLogin": true,
            "region": "US",
            "originalLanguage": "en",
            "trustProxy": false,
            "csrfProtection": true
        }';
        add_header Content-Type application/json;
    }
    
    # API user info endpoint  
    location /api/v1/auth/me {
        if ($http_authorization) {
            return 200 '{
                "id": 1,
                "email": "admin@overseerr.dev",
                "username": "admin",
                "plexId": 12345,
                "plexUsername": "testadmin",
                "displayName": "Test Admin",
                "avatar": "/os_logo_square.png",
                "permissions": 2147483647,
                "userType": 1,
                "warnings": [],
                "movieQuotaLimit": null,
                "movieQuotaDays": null,
                "tvQuotaLimit": null,
                "tvQuotaDays": null,
                "createdAt": "2023-01-01T00:00:00.000Z",
                "updatedAt": "2023-01-01T00:00:00.000Z"
            }';
        }
        return 401 '{"message": "Unauthorized"}';
        add_header Content-Type application/json;
    }
    
    # API requests endpoint
    location /api/v1/request {
        if ($request_method = GET) {
            return 200 '{
                "pageInfo": {
                    "pages": 1,
                    "pageSize": 20,
                    "results": 2,
                    "page": 1
                },
                "results": [
                    {
                        "id": 1,
                        "status": 1,
                        "createdAt": "2023-01-01T00:00:00.000Z",
                        "updatedAt": "2023-01-01T00:00:00.000Z",
                        "type": "movie",
                        "media": {
                            "id": 1,
                            "mediaType": "movie",
                            "tmdbId": 123456,
                            "tvdbId": null,
                            "status": 5,
                            "requests": [],
                            "createdAt": "2023-01-01T00:00:00.000Z",
                            "updatedAt": "2023-01-01T00:00:00.000Z"
                        },
                        "requestedBy": {
                            "id": 1,
                            "username": "testuser",
                            "displayName": "Test User",
                            "avatar": "/os_logo_square.png"
                        }
                    },
                    {
                        "id": 2,
                        "status": 2,
                        "createdAt": "2023-01-01T00:00:00.000Z",
                        "updatedAt": "2023-01-01T00:00:00.000Z",
                        "type": "tv",
                        "media": {
                            "id": 2,
                            "mediaType": "tv",
                            "tmdbId": 789012,
                            "tvdbId": 345678,
                            "status": 3,
                            "requests": [],
                            "createdAt": "2023-01-01T00:00:00.000Z",
                            "updatedAt": "2023-01-01T00:00:00.000Z"
                        },
                        "requestedBy": {
                            "id": 1,
                            "username": "testuser",
                            "displayName": "Test User",
                            "avatar": "/os_logo_square.png"
                        }
                    }
                ]
            }';
        }
        
        if ($request_method = POST) {
            return 201 '{
                "id": 3,
                "status": 1,
                "createdAt": "2023-01-01T00:00:00.000Z",
                "updatedAt": "2023-01-01T00:00:00.000Z",
                "type": "movie",
                "media": {
                    "id": 3,
                    "mediaType": "movie",
                    "tmdbId": 999999,
                    "status": 1,
                    "createdAt": "2023-01-01T00:00:00.000Z",
                    "updatedAt": "2023-01-01T00:00:00.000Z"
                },
                "requestedBy": {
                    "id": 1,
                    "username": "testuser",
                    "displayName": "Test User"
                }
            }';
        }
        
        return 405;
        add_header Content-Type application/json;
    }
    
    # API request approval/denial
    location ~ ^/api/v1/request/([0-9]+)/(approve|decline)$ {
        if ($request_method = POST) {
            set $request_id $1;
            set $action $2;
            
            if ($action = "approve") {
                return 200 '{
                    "id": '$request_id',
                    "status": 2,
                    "updatedAt": "2023-01-01T00:00:00.000Z"
                }';
            }
            
            if ($action = "decline") {
                return 200 '{
                    "id": '$request_id',
                    "status": 3,
                    "updatedAt": "2023-01-01T00:00:00.000Z"
                }';
            }
        }
        return 405;
        add_header Content-Type application/json;
    }
    
    # API movie search endpoint
    location /api/v1/search {
        if ($args ~ "query=([^&]+)") {
            set $query $1;
            return 200 '{
                "page": 1,
                "totalPages": 1,
                "totalResults": 1,
                "results": [
                    {
                        "id": 123456,
                        "mediaType": "movie",
                        "title": "Test Movie Result",
                        "originalTitle": "Test Movie Result",
                        "overview": "A test movie for search results",
                        "posterPath": "/test-poster.jpg",
                        "backdropPath": "/test-backdrop.jpg",
                        "releaseDate": "2023-01-01",
                        "adult": false,
                        "genreIds": [28, 12],
                        "originalLanguage": "en",
                        "popularity": 100.0,
                        "voteAverage": 7.5,
                        "voteCount": 1000
                    }
                ]
            }';
        }
        
        return 200 '{
            "page": 1,
            "totalPages": 0,
            "totalResults": 0,
            "results": []
        }';
        add_header Content-Type application/json;
    }
    
    # Default static file serving
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
    }
    
    # CORS headers for API requests
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-API-Key" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-API-Key";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
}