server {
    listen 80;
    server_name localhost;
    
    # Health check endpoint
    location /health {
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Plex PIN creation endpoint
    location /pins.xml {
        if ($request_method = POST) {
            return 200 '<?xml version="1.0" encoding="UTF-8"?>
<response>
    <pin id="test-pin-id" code="1234">
        <expires_at>2024-12-31T23:59:59Z</expires_at>
        <auth_token></auth_token>
    </pin>
</response>';
        }
        return 405;
        add_header Content-Type application/xml;
    }
    
    # Plex PIN verification endpoint  
    location ~ ^/pins/([0-9]+)\.xml$ {
        if ($request_method = GET) {
            set $pin_id $1;
            return 200 '<?xml version="1.0" encoding="UTF-8"?>
<response>
    <pin id="test-pin-id" code="1234">
        <expires_at>2024-12-31T23:59:59Z</expires_at>
        <auth_token>test-auth-token-12345</auth_token>
    </pin>
</response>';
        }
        return 405;
        add_header Content-Type application/xml;
    }
    
    # Plex user info endpoint
    location /users/account {
        if ($request_method = GET) {
            return 200 '{
                "user": {
                    "id": 12345,
                    "uuid": "test-uuid-12345",
                    "email": "test@example.com",
                    "joined_at": "2020-01-01",
                    "username": "testuser",
                    "title": "Test User",
                    "thumb": "https://plex.tv/users/test-uuid-12345/avatar",
                    "subscription": {
                        "active": true,
                        "status": "Active",
                        "plan": "lifetime"
                    }
                }
            }';
        }
        return 405;
        add_header Content-Type application/json;
    }
    
    # Plex server resources
    location /resources {
        if ($request_method = GET) {
            return 200 '<?xml version="1.0" encoding="UTF-8"?>
<MediaContainer>
    <Device name="Test Plex Server" 
            product="Plex Media Server" 
            productVersion="1.32.0" 
            platform="Linux" 
            clientIdentifier="test-machine-id"
            accessToken="test-access-token"
            uri="http://plex-mock-e2e:32400" 
            publicAddress="192.168.1.100" 
            httpsRequired="0" 
            owned="1" 
            synced="0" />
</MediaContainer>';
        }
        return 405;
        add_header Content-Type application/xml;
    }
    
    # Default static file serving
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
    }
    
    # CORS headers for API requests
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
}