# MediaNest Secure Docker Compose Configuration
# Addresses security vulnerabilities found in audit
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: medianest-app-secure
    restart: unless-stopped
    ports:
      - '127.0.0.1:3000:3000' # Bind to localhost only
      - '127.0.0.1:4000:4000' # Bind to localhost only
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?connection_limit=20&pool_timeout=30
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET_FILE=/run/secrets/nextauth_secret
      - PLEX_CLIENT_ID_FILE=/run/secrets/plex_client_id
      - PLEX_CLIENT_SECRET_FILE=/run/secrets/plex_client_secret
      - ENCRYPTION_KEY_FILE=/run/secrets/encryption_key
      - JWT_SECRET_FILE=/run/secrets/jwt_secret
    volumes:
      - ./youtube:/app/youtube:rw
      - uploads:/app/uploads:rw
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    user: '1000:1000'
    networks:
      - medianest-network
    secrets:
      - nextauth_secret
      - plex_client_id
      - plex_client_secret
      - encryption_key
      - jwt_secret
      - postgres_password
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=100m,noexec,nosuid,nodev
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  postgres:
    image: postgres:15-alpine
    container_name: medianest-postgres-secure
    restart: unless-stopped
    environment:
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    # Remove exposed ports for production security
    expose:
      - '5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $(cat /run/secrets/postgres_user)']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - medianest-network
    secrets:
      - postgres_db
      - postgres_user
      - postgres_password
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  redis:
    image: redis:7-alpine
    container_name: medianest-redis-secure
    restart: unless-stopped
    command: >
      redis-server
      --requirepass $(cat /run/secrets/redis_password)
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --bind 0.0.0.0
      --protected-mode yes
    volumes:
      - redis_data:/data
    # Remove exposed ports for production security
    expose:
      - '6379'
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '$(cat /run/secrets/redis_password)', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - medianest-network
    secrets:
      - redis_password
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

secrets:
  nextauth_secret:
    external: true
    name: medianest_nextauth_secret_v1
  plex_client_id:
    external: true
    name: medianest_plex_client_id_v1
  plex_client_secret:
    external: true
    name: medianest_plex_client_secret_v1
  encryption_key:
    external: true
    name: medianest_encryption_key_v1
  jwt_secret:
    external: true
    name: medianest_jwt_secret_v1
  postgres_db:
    external: true
    name: medianest_postgres_db_v1
  postgres_user:
    external: true
    name: medianest_postgres_user_v1
  postgres_password:
    external: true
    name: medianest_postgres_password_v1
  redis_password:
    external: true
    name: medianest_redis_password_v1

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/medianest/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/medianest/redis
  uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/medianest/uploads

networks:
  medianest-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-medianest
    enable_ipv6: false
    ipam:
      config:
        - subnet: 172.20.0.0/24
