{
  "report": "üèóÔ∏è MEDIANEST ARCHITECTURAL INTEGRITY REPORT\n==========================================\n\nüìä EXECUTIVE SUMMARY\n-------------------\nTotal Modules Analyzed: 294\nCircular Dependencies: 0 (0 high severity)\nLayer Violations: 33 (3 critical)\nCoupling Issues: 7 (4 critical, 3 concerning)\n\nüéØ ARCHITECTURAL HEALTH SCORE: 0/100 (Grade: F)\n\nüèõÔ∏è LAYER DISTRIBUTION\n--------------------\nunknown: 30 modules (10.2%)\ninfrastructure: 45 modules (15.3%)\npresentation: 77 modules (26.2%)\ndata: 14 modules (4.8%)\nbusiness: 26 modules (8.8%)\nshared: 102 modules (34.7%)\n\nüö´ LAYER VIOLATIONS\n------------------\n1. MINOR: infrastructure layer should not depend on data layer\n   backend/src/config/database.ts ‚Üí backend/src/db/prisma.ts\n2. MINOR: infrastructure layer should not depend on data layer\n   backend/src/config/database.ts ‚Üí backend/src/repositories/index.ts\n3. MINOR: presentation layer should not depend on data layer\n   backend/src/controllers/optimized-media.controller.ts ‚Üí backend/src/repositories/optimized-media-request.repository.ts\n4. MINOR: presentation layer should not depend on unknown layer\n   backend/src/controllers/optimized-media.controller.ts ‚Üí backend/src/lib/prisma.ts\n5. MINOR: presentation layer should not depend on unknown layer\n   backend/src/controllers/optimized-media.controller.ts ‚Üí backend/src/auth/index.ts\n6. MINOR: presentation layer should not depend on data layer\n   backend/src/middleware/auth/device-session-manager.ts ‚Üí backend/src/repositories/session-token.repository.ts\n7. MINOR: presentation layer should not depend on data layer\n   backend/src/middleware/auth/token-rotator.ts ‚Üí backend/src/repositories/session-token.repository.ts\n8. MINOR: presentation layer should not depend on data layer\n   backend/src/middleware/auth/user-validator.ts ‚Üí backend/src/repositories/user.repository.ts\n9. MINOR: presentation layer should not depend on data layer\n   backend/src/middleware/auth-cache.ts ‚Üí backend/src/repositories/index.ts\n10. MINOR: presentation layer should not depend on unknown layer\n   backend/src/middleware/auth-validator.ts ‚Üí backend/src/auth/index.ts\n... and 23 more\n\nüîó COUPLING ISSUES\n-----------------\n1. CONCERNING: Excessive dependencies (high efferent coupling)\n   Module: backend/src/routes/auth.ts\n   Afferent: 0, Efferent: 19, Total: 19\n2. CONCERNING: Excessive dependencies (high efferent coupling)\n   Module: backend/src/routes/v1/index.ts\n   Afferent: 2, Efferent: 17, Total: 19\n3. CONCERNING: Excessive dependencies (high efferent coupling)\n   Module: backend/src/server.ts\n   Afferent: 0, Efferent: 17, Total: 17\n4. CRITICAL: High coupling\n   Module: backend/src/types/common.ts\n   Afferent: 83, Efferent: 1, Total: 84\n5. CRITICAL: God object (high afferent coupling)\n   Module: backend/src/types/common.ts\n   Afferent: 83, Efferent: 1, Total: 84\n6. CRITICAL: High coupling\n   Module: backend/src/utils/logger.ts\n   Afferent: 92, Efferent: 0, Total: 92\n7. CRITICAL: God object (high afferent coupling)\n   Module: backend/src/utils/logger.ts\n   Afferent: 92, Efferent: 0, Total: 92\n\nüí° ARCHITECTURAL RECOMMENDATIONS\n--------------------------------\n‚Ä¢ LAYER VIOLATIONS:\n  - Move violating dependencies to appropriate layers\n  - Implement proper dependency inversion\n  - Use interfaces to decouple layers\n\n‚Ä¢ COUPLING ISSUES:\n  - Apply Single Responsibility Principle\n  - Extract smaller, focused modules\n  - Use facade patterns for complex subsystems\n  - Implement dependency injection\n\n‚Ä¢ GENERAL IMPROVEMENTS:\n  - Implement architectural unit tests\n  - Set up architectural fitness functions\n  - Regular architectural reviews and refactoring\n  - Document architectural decisions and constraints",
  "summary": {
    "totalModules": 294,
    "circularDependencies": 0,
    "layerViolations": 33,
    "couplingIssues": 7,
    "healthScore": 0,
    "healthGrade": "F",
    "layerDistribution": {
      "unknown": 30,
      "infrastructure": 45,
      "presentation": 77,
      "data": 14,
      "business": 26,
      "shared": 102
    }
  },
  "details": {
    "circularDependencies": [],
    "layerViolations": [
      {
        "violator": "backend/src/config/database.ts",
        "violatee": "backend/src/db/prisma.ts",
        "violatorLayer": "infrastructure",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "infrastructure layer should not depend on data layer"
      },
      {
        "violator": "backend/src/config/database.ts",
        "violatee": "backend/src/repositories/index.ts",
        "violatorLayer": "infrastructure",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "infrastructure layer should not depend on data layer"
      },
      {
        "violator": "backend/src/controllers/optimized-media.controller.ts",
        "violatee": "backend/src/repositories/optimized-media-request.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/controllers/optimized-media.controller.ts",
        "violatee": "backend/src/lib/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/controllers/optimized-media.controller.ts",
        "violatee": "backend/src/auth/index.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/middleware/auth/device-session-manager.ts",
        "violatee": "backend/src/repositories/session-token.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/auth/token-rotator.ts",
        "violatee": "backend/src/repositories/session-token.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/auth/user-validator.ts",
        "violatee": "backend/src/repositories/user.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/auth-cache.ts",
        "violatee": "backend/src/repositories/index.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/auth-validator.ts",
        "violatee": "backend/src/auth/index.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/middleware/auth.ts",
        "violatee": "backend/src/repositories/session-token.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/auth.ts",
        "violatee": "backend/src/repositories/user.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/auth.ts",
        "violatee": "backend/src/lib/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/middleware/auth.ts",
        "violatee": "backend/src/auth/index.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/middleware/socket-auth.ts",
        "violatee": "backend/src/repositories/session-token.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/middleware/socket-auth.ts",
        "violatee": "backend/src/repositories/user.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/repositories/error.repository.ts",
        "violatee": "backend/src/lib/prisma.ts",
        "violatorLayer": "data",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "data layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/repositories/optimized-notification.repository.ts",
        "violatee": "backend/src/services/notification-database.service.ts",
        "violatorLayer": "data",
        "violateeLayer": "business",
        "severity": "critical",
        "description": "data layer should not depend on business layer"
      },
      {
        "violator": "backend/src/repositories/service-config.repository.ts",
        "violatee": "backend/src/services/encryption.service.ts",
        "violatorLayer": "data",
        "violateeLayer": "business",
        "severity": "critical",
        "description": "data layer should not depend on business layer"
      },
      {
        "violator": "backend/src/repositories/user.repository.ts",
        "violatee": "backend/src/services/encryption.service.ts",
        "violatorLayer": "data",
        "violateeLayer": "business",
        "severity": "critical",
        "description": "data layer should not depend on business layer"
      },
      {
        "violator": "backend/src/routes/admin.ts",
        "violatee": "backend/src/db/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/routes/auth.ts",
        "violatee": "backend/src/repositories/session-token.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/routes/auth.ts",
        "violatee": "backend/src/repositories/user.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/routes/auth.ts",
        "violatee": "backend/src/lib/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/routes/dashboard.ts",
        "violatee": "backend/src/db/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/routes/media.ts",
        "violatee": "backend/src/db/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/routes/optimized-routes.ts",
        "violatee": "backend/src/auth/index.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "unknown",
        "severity": "minor",
        "description": "presentation layer should not depend on unknown layer"
      },
      {
        "violator": "backend/src/routes/v1/errors.routes.ts",
        "violatee": "backend/src/repositories/error.repository.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/routes/youtube.ts",
        "violatee": "backend/src/db/prisma.ts",
        "violatorLayer": "presentation",
        "violateeLayer": "data",
        "severity": "minor",
        "description": "presentation layer should not depend on data layer"
      },
      {
        "violator": "backend/src/utils/jwt.ts",
        "violatee": "backend/src/config/config.service.ts",
        "violatorLayer": "shared",
        "violateeLayer": "infrastructure",
        "severity": "major",
        "description": "shared layer should not depend on infrastructure layer"
      },
      {
        "violator": "backend/src/utils/security.ts",
        "violatee": "backend/src/config/config.service.ts",
        "violatorLayer": "shared",
        "violateeLayer": "infrastructure",
        "severity": "major",
        "description": "shared layer should not depend on infrastructure layer"
      },
      {
        "violator": "shared/src/patterns/health-check-manager.ts",
        "violatee": "shared/src/config/logging.config.ts",
        "violatorLayer": "shared",
        "violateeLayer": "infrastructure",
        "severity": "major",
        "description": "shared layer should not depend on infrastructure layer"
      },
      {
        "violator": "shared/src/patterns/health-check-manager.ts",
        "violatee": "shared/src/config/redis.config.ts",
        "violatorLayer": "shared",
        "violateeLayer": "infrastructure",
        "severity": "major",
        "description": "shared layer should not depend on infrastructure layer"
      }
    ],
    "couplingIssues": [
      {
        "module": "backend/src/routes/auth.ts",
        "issue": "Excessive dependencies (high efferent coupling)",
        "afferent": 0,
        "efferent": 19,
        "total": 19,
        "severity": "concerning"
      },
      {
        "module": "backend/src/routes/v1/index.ts",
        "issue": "Excessive dependencies (high efferent coupling)",
        "afferent": 2,
        "efferent": 17,
        "total": 19,
        "severity": "concerning"
      },
      {
        "module": "backend/src/server.ts",
        "issue": "Excessive dependencies (high efferent coupling)",
        "afferent": 0,
        "efferent": 17,
        "total": 17,
        "severity": "concerning"
      },
      {
        "module": "backend/src/types/common.ts",
        "issue": "High coupling",
        "afferent": 83,
        "efferent": 1,
        "total": 84,
        "severity": "critical"
      },
      {
        "module": "backend/src/types/common.ts",
        "issue": "God object (high afferent coupling)",
        "afferent": 83,
        "efferent": 1,
        "total": 84,
        "severity": "critical"
      },
      {
        "module": "backend/src/utils/logger.ts",
        "issue": "High coupling",
        "afferent": 92,
        "efferent": 0,
        "total": 92,
        "severity": "critical"
      },
      {
        "module": "backend/src/utils/logger.ts",
        "issue": "God object (high afferent coupling)",
        "afferent": 92,
        "efferent": 0,
        "total": 92,
        "severity": "critical"
      }
    ]
  }
}