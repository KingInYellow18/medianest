# MediaNest Development Docker Compose
# Enhanced development environment with hot reloading
# Use with: docker compose -f docker-compose.dev.yml up -d

services:
  # =============================================================================
  # DEVELOPMENT APPLICATION (Hot Reload)
  # =============================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: medianest/app:dev
    container_name: medianest-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"  # Frontend
      - "3001:3001"  # Backend
      - "5555:5555"  # Prisma Studio
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-medianest}:${POSTGRES_PASSWORD:-medianest_dev}@postgres:5432/${POSTGRES_DB:-medianest}
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-dev-secret-key}
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret}
      - JWT_ISSUER=${JWT_ISSUER:-medianest-dev}
      - JWT_AUDIENCE=${JWT_AUDIENCE:-medianest-users-dev}
      - PLEX_CLIENT_ID=${PLEX_CLIENT_ID}
      - PLEX_CLIENT_SECRET=${PLEX_CLIENT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-dev-encryption-key-32chars!!}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      # Development specific
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      # Source code mounting for hot reload
      - ./src:/app/src:cached
      - ./frontend/src:/app/frontend/src:cached
      - ./backend/src:/app/backend/src:cached
      - ./shared/src:/app/shared/src:cached
      
      # Configuration files
      - ./package.json:/app/package.json:ro
      - ./frontend/package.json:/app/frontend/package.json:ro
      - ./backend/package.json:/app/backend/package.json:ro
      - ./shared/package.json:/app/shared/package.json:ro
      - ./tsconfig.base.json:/app/tsconfig.base.json:ro
      - ./frontend/tsconfig.json:/app/frontend/tsconfig.json:ro
      - ./backend/tsconfig.json:/app/backend/tsconfig.json:ro
      
      # Next.js and build configs
      - ./frontend/next.config.js:/app/frontend/next.config.js:ro
      - ./frontend/tailwind.config.ts:/app/frontend/tailwind.config.ts:ro
      - ./frontend/postcss.config.mjs:/app/frontend/postcss.config.mjs:ro
      
      # Prisma schemas
      - ./frontend/prisma:/app/frontend/prisma:cached
      - ./backend/prisma:/app/backend/prisma:cached
      
      # Development data
      - dev_logs:/app/logs:rw
      - dev_uploads:/app/uploads:rw
      - dev_youtube:/app/youtube:rw
      
      # Node modules cache (for faster rebuilds)
      - dev_node_modules:/app/node_modules
      - dev_frontend_node_modules:/app/frontend/node_modules
      - dev_backend_node_modules:/app/backend/node_modules
      - dev_shared_node_modules:/app/shared/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - medianest-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # =============================================================================
  # DEVELOPMENT DATABASE (PostgreSQL)
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: medianest-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-medianest}
      - POSTGRES_USER=${POSTGRES_USER:-medianest}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-medianest_dev}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"  # Exposed for development tools
    networks:
      - medianest-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-medianest}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c log_statement=all
      -c log_duration=on
      -c log_min_duration_statement=0
      -c max_connections=100
      -c shared_buffers=128MB

  # =============================================================================
  # DEVELOPMENT CACHE (Redis)
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: medianest-redis-dev
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --save ""
      --loglevel debug
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_dev_data:/data
      - redis_dev_logs:/var/log/redis
    ports:
      - "6379:6379"  # Exposed for development tools
    networks:
      - medianest-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # =============================================================================
  # DEVELOPMENT TOOLS (Optional)
  # =============================================================================
  adminer:
    image: adminer:4
    container_name: medianest-adminer-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - medianest-dev
    profiles:
      - tools

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: medianest-redis-commander-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - medianest-dev
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  redis_dev_logs:
    driver: local
  dev_logs:
    driver: local
  dev_uploads:
    driver: local
  dev_youtube:
    driver: local
  dev_node_modules:
    driver: local
  dev_frontend_node_modules:
    driver: local
  dev_backend_node_modules:
    driver: local
  dev_shared_node_modules:
    driver: local

networks:
  medianest-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16