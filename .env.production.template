# =============================================================================
# MediaNest Production Environment Configuration Template
# =============================================================================
# 
# IMPORTANT: This is a template file. DO NOT commit actual values to git!
# 
# Setup Instructions:
# 1. Copy this file to .env.production
# 2. Replace all placeholder values with your actual configuration
# 3. For sensitive values, use Docker secrets (see SECURITY section)
# 4. Run scripts/validate-env.js to verify your configuration
# 5. Ensure file permissions: chmod 600 .env.production
#
# Variable Types:
# - [REQUIRED] - Must be set for application to start
# - [OPTIONAL] - Has sensible defaults
# - [SECRET] - Should use Docker secrets in production
#
# =============================================================================

# =============================================================================
# APPLICATION ENVIRONMENT
# =============================================================================
# [REQUIRED] Node environment (production/staging)
NODE_ENV=production

# [REQUIRED] Application domain name
DOMAIN_NAME=media.yourdomain.com

# [OPTIONAL] Compose project name for Docker
COMPOSE_PROJECT_NAME=medianest

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# [REQUIRED] Backend server port
PORT=4000

# [REQUIRED] Server host binding
HOST=0.0.0.0

# [REQUIRED] Public URLs - Update with your domain
FRONTEND_URL=https://media.yourdomain.com
BACKEND_URL=https://media.yourdomain.com
NEXTAUTH_URL=https://media.yourdomain.com

# [OPTIONAL] API configuration
API_PREFIX=/api
API_VERSION=v1

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# [REQUIRED] PostgreSQL connection string
# Format: postgresql://username:password@host:port/database?options
DATABASE_URL=postgresql://medianest:CHANGE_ME@postgres:5432/medianest?connection_limit=20&pool_timeout=30

# [OPTIONAL] Connection pool settings
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10
DATABASE_POOL_IDLE=30000
DATABASE_STATEMENT_TIMEOUT=30000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# [REQUIRED] Redis connection - Choose Option 1 OR Option 2

# Option 1: Full connection URL
REDIS_URL=redis://:CHANGE_ME@redis:6379/0

# Option 2: Individual settings (uncomment if using)
# REDIS_HOST=redis
# REDIS_PORT=6379
# REDIS_PASSWORD=CHANGE_ME
# REDIS_DATABASE=0
# REDIS_TLS=false

# [OPTIONAL] Redis connection settings
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=500
REDIS_COMMAND_TIMEOUT=5000
REDIS_KEEP_ALIVE=30000

# =============================================================================
# SECURITY & SECRETS (Use Docker Secrets in Production!)
# =============================================================================
# [SECRET] Enable Docker secrets for sensitive values
USE_DOCKER_SECRETS=true
DOCKER_SECRETS_PATH=/run/secrets

# The following should be stored as Docker secrets:
# - jwt_secret
# - nextauth_secret
# - encryption_key
# - database_password
# - redis_password
# - plex_client_secret
# - admin_password

# [REQUIRED] JWT configuration
JWT_ISSUER=medianest
JWT_AUDIENCE=medianest-api
JWT_EXPIRES_IN=7d

# [REQUIRED] Session configuration
SESSION_NAME=medianest.sid
SESSION_MAX_AGE=604800000
SESSION_SECURE=true
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=strict

# [OPTIONAL] Security settings
HELMET_ENABLED=true
TRUST_PROXY=true
BCRYPT_ROUNDS=12

# =============================================================================
# PLEX OAUTH CONFIGURATION
# =============================================================================
# [REQUIRED] Plex OAuth credentials
PLEX_CLIENT_ID=MediaNest
# PLEX_CLIENT_SECRET should be in Docker secrets

# [OPTIONAL] Plex configuration
PLEX_TIMEOUT=30000
PLEX_MAX_RETRIES=3

# =============================================================================
# RATE LIMITING
# =============================================================================
# [REQUIRED] API rate limits (requests per window)
RATE_LIMIT_API_REQUESTS=100
RATE_LIMIT_API_WINDOW=60

# [REQUIRED] Service-specific rate limits
RATE_LIMIT_YOUTUBE_REQUESTS=5
RATE_LIMIT_YOUTUBE_WINDOW=3600
RATE_LIMIT_MEDIA_REQUESTS=20
RATE_LIMIT_MEDIA_WINDOW=3600
RATE_LIMIT_AUTH_REQUESTS=5
RATE_LIMIT_AUTH_WINDOW=900

# =============================================================================
# YOUTUBE DOWNLOADER CONFIGURATION
# =============================================================================
# [REQUIRED] YouTube download settings
YOUTUBE_DOWNLOAD_PATH=/app/youtube
YOUTUBE_MAX_CONCURRENT_DOWNLOADS=3
YOUTUBE_MAX_FILE_SIZE=5368709120  # 5GB in bytes
YOUTUBE_ALLOWED_FORMATS=mp4,webm,mkv
YOUTUBE_DEFAULT_QUALITY=1080p
YOUTUBE_RATE_LIMIT=5

# [REQUIRED] Path where Plex can access YouTube downloads
PLEX_YOUTUBE_LIBRARY_PATH=/data/youtube

# [OPTIONAL] yt-dlp binary path
YT_DLP_PATH=yt-dlp

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# [OPTIONAL] Service timeouts (milliseconds)
OVERSEERR_TIMEOUT=10000
UPTIME_KUMA_TIMEOUT=5000
SERVICE_STATUS_CACHE_TTL=300

# Service credentials are configured via Admin UI
# Or set here (use Docker secrets for API keys):
# OVERSEERR_URL=http://overseerr:5055
# OVERSEERR_API_KEY=<use docker secret>
# UPTIME_KUMA_URL=http://uptime-kuma:3001
# UPTIME_KUMA_TOKEN=<use docker secret>

# =============================================================================
# QUEUE CONFIGURATION
# =============================================================================
# [OPTIONAL] BullMQ settings
QUEUE_REDIS_MAX_RETRIES=3
QUEUE_DEFAULT_REMOVE_ON_COMPLETE=100
QUEUE_DEFAULT_REMOVE_ON_FAIL=500

# [OPTIONAL] Worker configuration
WORKER_CONCURRENCY=2
WORKER_MAX_JOBS_PER_WORKER=10

# =============================================================================
# LOGGING & MONITORING
# =============================================================================
# [REQUIRED] Logging configuration
LOG_LEVEL=info
LOG_MAX_FILES=14
LOG_MAX_SIZE=50m
LOG_COMPRESS=true
ENABLE_ACCESS_LOGS=true
ENABLE_ERROR_LOGS=true
ENABLE_SQL_LOGS=false

# [OPTIONAL] Health check and metrics
HEALTH_CHECK_INTERVAL=30000
METRICS_ENABLED=true
METRICS_PORT=9090

# [OPTIONAL] External monitoring services
# SENTRY_DSN=https://your-key@sentry.io/project-id
# NEW_RELIC_LICENSE_KEY=your-license-key
# DATADOG_API_KEY=your-api-key

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# [REQUIRED] CORS settings
CORS_ORIGIN=https://media.yourdomain.com
CORS_CREDENTIALS=true

# =============================================================================
# FILE HANDLING
# =============================================================================
# [OPTIONAL] File upload limits
UPLOAD_MAX_FILE_SIZE=104857600  # 100MB in bytes
UPLOAD_ALLOWED_MIME_TYPES=image/jpeg,image/png,image/gif,image/webp

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================
# [OPTIONAL] Cache TTL in seconds
CACHE_TTL_DEFAULT=300
CACHE_TTL_USER=600
CACHE_TTL_MEDIA=1800
CACHE_TTL_SERVICE_STATUS=60

# =============================================================================
# FRONTEND CONFIGURATION (Next.js)
# =============================================================================
# These are exposed to the browser - DO NOT put secrets here!

# [REQUIRED] Public API endpoints
NEXT_PUBLIC_API_URL=https://media.yourdomain.com/api
NEXT_PUBLIC_BACKEND_URL=https://media.yourdomain.com
NEXT_PUBLIC_WS_URL=wss://media.yourdomain.com

# [REQUIRED] Application metadata
NEXT_PUBLIC_APP_NAME=MediaNest
NEXT_PUBLIC_APP_VERSION=1.0.0

# [OPTIONAL] Feature flags
NEXT_PUBLIC_ENABLE_ANALYTICS=false
NEXT_PUBLIC_ENABLE_ERROR_REPORTING=true
NEXT_PUBLIC_ERROR_REPORTING_ENDPOINT=/api/v1/errors
NEXT_PUBLIC_ENABLE_PERFORMANCE_MONITORING=true
NEXT_PUBLIC_ENABLE_PWA=true

# [OPTIONAL] Image optimization
NEXT_PUBLIC_IMAGE_OPTIMIZATION=true
NEXT_PUBLIC_IMAGE_DOMAINS=plex.tv,image.tmdb.org

# [OPTIONAL] Build optimizations
NEXT_TELEMETRY_DISABLED=1
NEXT_OPTIMIZE_FONTS=true
NEXT_OPTIMIZE_IMAGES=true
NEXT_OPTIMIZE_CSS=true
NEXT_WEBPACK_CACHE=true

# =============================================================================
# DOCKER & DEPLOYMENT
# =============================================================================
# [REQUIRED] Data persistence paths
DATA_PATH=/var/lib/medianest
LOG_PATH=/var/log/medianest
BACKUP_PATH=/backups/medianest

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
# [REQUIRED] SSL certificate configuration
CERTBOT_EMAIL=admin@yourdomain.com
SSL_STAGING=false  # Set to true for Let's Encrypt staging

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
# [OPTIONAL] Backup settings
BACKUP_RETENTION_DAYS=30
BACKUP_NOTIFICATION_URL=https://your-webhook-url.com/backup-status

# =============================================================================
# ADMIN BOOTSTRAP
# =============================================================================
# [REQUIRED] Initial admin credentials (change immediately!)
ADMIN_USERNAME=admin
# ADMIN_PASSWORD should be in Docker secrets

# =============================================================================
# VALIDATION CHECKLIST
# =============================================================================
# Before deploying, ensure you have:
# [ ] Updated DOMAIN_NAME and all URL variables
# [ ] Set strong DATABASE_URL password
# [ ] Set strong REDIS_URL password
# [ ] Created all required Docker secrets
# [ ] Updated CERTBOT_EMAIL for SSL certificates
# [ ] Changed default ADMIN credentials
# [ ] Reviewed rate limiting settings
# [ ] Configured external service URLs
# [ ] Set appropriate resource limits
# [ ] Tested with scripts/validate-env.js

# =============================================================================
# NOTES
# =============================================================================
# - For high availability, increase worker concurrency and database pool
# - Monitor disk usage for YouTube downloads and logs
# - Regularly rotate secrets and update Docker secrets
# - Keep this template updated with new configuration options