# =============================================================================
# .gitignore for MediaNest Project - Unified Multi-Branch Configuration
# Optimized for all branch strategies: production, development, testing, and experimentation
# Merged from test branch: Complete test suite modernization and dependency updates
# =============================================================================

# Dependencies (Always exclude)
node_modules/
.pnp
.pnp.js
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Build Outputs (Exclude - rebuilt frequently)
build/
dist/
out/
.next/
coverage/
.nyc_output
*.tsbuildinfo
next-env.d.ts
shared/**/*.js
shared/**/*.js.map
shared/**/*.d.ts
shared/**/*.d.ts.map
!shared/tsconfig.json

# Environment & Secrets (Critical exclusion - even for personal dev)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.staging
.env.production*
.env.prod*
secrets/
!secrets/.gitkeep
.secrets/
docker-secrets/
certs/
*.pem
*.key
*.crt
*.csr

# Testing & Experimentation (Include for learning and development)
test-results/
junit.xml
results.json
visual-regression-diff/
screenshot-diff/
playwright-report/
storybook-static/
# IDE Settings (Include personal configurations for development)
# .vscode/ (KEEP personal IDE setup)
# .idea/ (KEEP personal IDE setup)
# Only exclude volatile temp data
.stryker-tmp/
.vscode/launch.json
.vscode/extensions.json
.idea/workspace.xml
.idea/tasks.xml
*.swp
*.swo
*~

# OS Files (Exclude system files)
.DS_Store
Thumbs.db
.Trashes

# Runtime Data (Exclude volatile data)
*.log
logs/
.cache/
.parcel-cache/
postgres_data/
redis_data/
*.db
*.db-journal
*.db-wal
*.sqlite
*.sqlite-journal
*.sqlite-wal

# Swarm and Hive Databases (Exclude runtime databases)
.swarm/memory.db
**/.swarm/memory.db
.hive-mind/*.db
.hive-mind/hive.db
swarm-memory.db

# Docker Runtime
docker-compose.override.yml

# Media & Uploads (Exclude large files)
uploads/
youtube/
downloads/

# Cache & Temp (Exclude volatile)
tmp/
temp/
.vercel

# Large Backups (Exclude to save space)
backups/
*.backup
*.bak

# Generated executables and temporary files
claude-flow
claude-flow.bat
claude-flow.ps1
hive-mind-prompt-*.txt

# Environment files with potential secrets
backend/.env.test
frontend/.env.test

# =============================================================================
# DEVELOPMENT BRANCH: CONTRIBUTOR WORKFLOWS
# =============================================================================
# For development branch: Include shared team configs, exclude personal settings
# This branch balances collaboration with personal privacy

# Claude Flow - Include shared, exclude personal
.claude/settings.local.json
.mcp.json.local
claude-flow.config.local.json
memory/personal/
.swarm/agents/personal/
.hive-mind/personal/

# Personal development tools (exclude for privacy)
*.personal.json
.dev-personal/
**/personal/

# =============================================================================
# BRANCH STRATEGIES SUMMARY
# =============================================================================
# MAIN BRANCH: Production-ready code only
# DEV BRANCH: Full development with test suite modernization
# TEST BRANCH: Complete test suite modernization and dependency updates
# CLAUDE-FLOW BRANCH: Maximum experimentation freedom

# Claude Flow generated files (exclude personal)
memory/claude-flow-data.json
memory/sessions/*
!memory/sessions/README.md
memory/agents/*
!memory/agents/README.md
# Runtime coordination (temporary)
coordination/memory_bank/*
coordination/subtasks/*
coordination/orchestration/*

# =============================================================================
# KEEP FOR DEVELOPMENT BRANCH
# =============================================================================
# ✅ All source code and components
# ✅ All documentation and guides  
# ✅ All configuration files
# ✅ All test files and infrastructure
# ✅ All development scripts
# ✅ Team IDE settings (.vscode/settings.json)
# ✅ Docker configurations
# ✅ CI/CD configurations
# ✅ Package management files
# ✅ Development tooling configs (prettier, eslint, etc.)
