# =============================================================================
# .gitignore for MediaNest Project - Unified Multi-Branch Configuration
# Optimized for all branch strategies: production, development, testing, and experimentation
# Merged from test branch: Complete test suite modernization and dependency updates
# Enhanced by GitIgnore_Engineer: Comprehensive audit and performance optimization
# =============================================================================

# Dependencies (Always exclude)
node_modules/
.pnp
.pnp.js
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions
.yarnrc.yml
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*
pnpm-debug.log*
lerna-debug.log*
.rush/temp/

# Build Outputs (Exclude - rebuilt frequently)
build/
dist/
out/
.next/
.nuxt/
.output/
coverage/
.nyc_output
*.tsbuildinfo
next-env.d.ts
.swc/
.turbo/

# TypeScript builds
shared/**/*.js
shared/**/*.js.map
shared/**/*.d.ts
shared/**/*.d.ts.map
!shared/tsconfig.json
*.tgz

# Next.js specific
.vercel/
.env*.local
.eslintcache

# Environment & Secrets (Critical exclusion - even for personal dev)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.staging
.env.production*
.env.prod*
secrets/
!secrets/.gitkeep
.secrets/
docker-secrets/
certs/
*.pem
*.key
*.crt
*.csr

# Testing & Experimentation (Include for learning and development)
test-results/
junit.xml
results.json
visual-regression-diff/
screenshot-diff/
playwright-report/
storybook-static/
.vitest/
html/
coverage-final.json
lcov.info
test-report.html
# IDE Settings (Include personal configurations for development)
# .vscode/ (KEEP personal IDE setup)
# .idea/ (KEEP personal IDE setup)
# Only exclude volatile temp data
.stryker-tmp/
.vscode/launch.json
.vscode/extensions.json
.idea/workspace.xml
.idea/tasks.xml
*.swp
*.swo
*~

# Modern IDEs
.fleet/
.cursor/
.zed/
*.sublime-workspace
*.sublime-project
.nova/

# OS Files (Exclude system files)
.DS_Store
Thumbs.db
.Trashes

# Runtime Data (Exclude volatile data)
*.log
logs/
.cache/
.parcel-cache/
postgres_data/
redis_data/
*.db
*.db-journal
*.db-wal
*.sqlite
*.sqlite-journal
*.sqlite-wal

# Prisma specific
prisma/migrations/dev.db*
prisma/*.db*
prisma/dev.db*
*.db-shm

# Swarm and Hive Databases (Exclude runtime databases)
.swarm/memory.db
**/.swarm/memory.db
.hive-mind/*.db
.hive-mind/hive.db
swarm-memory.db
session-*
./hive-mind
# 
# Docker Runtime
docker-compose.override.yml

# Media & Uploads (Exclude large files)
uploads/
youtube/
downloads/

# Cache & Temp (Exclude volatile)
tmp/
temp/
.vercel

# Large Backups (Exclude to save space)
backups/
*.backup
*.bak

# =============================================================================
# DOCUMENTATION & BUILD SYSTEMS (Enhanced Coverage)
# =============================================================================

# MkDocs (Documentation system)
site/
mkdocs-env/
.mkdocs/
requirements.txt
docs-venv/

# Python Virtual Environments
venv/
env/
ENV/
.venv/
.env/
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
pip-log.txt
pip-delete-this-directory.txt

# Documentation Build Artifacts
**/node_modules/
docs/build/
storybook-static/
.docusaurus/

# Generated executables and temporary files
claude-flow
claude-flow.bat
claude-flow.ps1
hive-mind-prompt-*.txt

# =============================================================================
# SECURITY & SENSITIVE PATTERNS (Enhanced)
# =============================================================================

# Environment Files (Complete coverage)
.env*
!.env.example
!.env.template
.env.*.local
.env.backup
config.local.*

# Certificate and Key Files (Enhanced patterns)
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
*.cer
*.der
*.jks
*.keystore
*.truststore
ca-certificates/

# API Keys and Tokens
**/api-keys/
**/tokens/
**/credentials/
auth-config.json
oauth-*.json

# Cloud and Service Credentials
.aws/
.gcp/
.azure/
service-account*.json
*-service-account.json

# Environment files with potential secrets
backend/.env.test
frontend/.env.test

# =============================================================================
# PERFORMANCE & ANALYSIS ARTIFACTS
# =============================================================================

# Performance Analysis (Exclude large analysis directories)
performance-analysis/
performance-results/
benchmarks/
profiling/
lighthouse-reports/

# Audit and Report Files
*-audit-report.json
*-report.json
link-check-report.json
security-audit.json

# Report and Analysis Files (Generated Documentation)
*_COMPLETE.md
*_REPORT.md
*_SUMMARY.md
*_GUIDE.md
*_VALIDATION_REPORT.md
*_IMPLEMENTATION_*.md
*_OPTIMIZATION_*.md
PRODUCTION_*.md
QA_*.md
QUALITY_*.md
HIVE_MIND_*.md
MKDOCS_*.md
COMPREHENSIVE_*.md

# Swarm and Hive Databases (Exclude from all branches except claude-flow)
.swarm/memory.db
**/.swarm/memory.db
.hive-mind/*.db
.hive-mind/hive.db
swarm-memory.db

# =============================================================================
# DEVELOPMENT BRANCH: CONTRIBUTOR WORKFLOWS
# =============================================================================
# For development branch: Include shared team configs, exclude personal settings
# This branch balances collaboration with personal privacy

# Claude Flow - Include shared, exclude personal
.claude/settings.local.json
.mcp.json.local
claude-flow.config.local.json
memory/personal/
.swarm/agents/personal/
.hive-mind/personal/
.claude/
.roo/
.swarm/
.hive-mind/
claude-flow.config.json
.roomodes
.claude-flow-project.json
.mcp.json
CLAUDE.md
./claude 

# Personal development tools (exclude for privacy)
*.personal.json
.dev-personal/
**/personal/

# =============================================================================
# BRANCH STRATEGIES SUMMARY
# =============================================================================
# MAIN BRANCH: Production-ready code only
# DEV BRANCH: Full development with test suite modernization
# TEST BRANCH: Complete test suite modernization and dependency updates
# CLAUDE-FLOW BRANCH: Maximum experimentation freedom


# Runtime coordination (temporary)
coordination/memory_bank/*
coordination/subtasks/*
coordination/orchestration/*

# =============================================================================
# BRANCH-SPECIFIC OPTIMIZATION PATTERNS
# =============================================================================

# Development Branch: Enhanced Patterns
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.idea/workspace.xml
!.idea/tasks.xml

# Testing Branch: Allow test artifacts
!test-results/
!coverage/lcov.info
!jest.config.js
!vitest.config.ts

# Production Branch: Strict exclusions
production-*.log
deploy-*.log
monitoring/
alerts/

# =============================================================================
# PERFORMANCE OPTIMIZATION PATTERNS  
# =============================================================================

# Build Cache Optimization
.cache/
.parcel-cache/
.swc/
.turbo/
.nx/cache/
.webpack/
.vite/

# Asset Optimization
*.webp.tmp
*.avif.tmp
image-optimization/
font-cache/

# =============================================================================
# KEEP FOR DEVELOPMENT BRANCH (Enhanced Guidelines)
# =============================================================================
# ✅ All source code and components
# ✅ All documentation and guides  
# ✅ All configuration files
# ✅ All test files and infrastructure
# ✅ All development scripts
# ✅ Team IDE settings (.vscode/settings.json)
# ✅ Docker configurations
# ✅ CI/CD configurations
# ✅ Package management files
# ✅ Development tooling configs (prettier, eslint, etc.)
# ✅ Essential documentation (README.md, CONTRIBUTING.md)
# ✅ Test configurations and fixtures
# ✅ Build and deployment scripts



# Claude Flow generated files
.claude/settings.local.json
.mcp.json
claude-flow.config.json
.swarm/
.hive-mind/
memory/claude-flow-data.json
memory/sessions/*
!memory/sessions/README.md
memory/agents/*
!memory/agents/README.md
coordination/memory_bank/*
coordination/subtasks/*
coordination/orchestration/*
*.db
*.db-journal
*.db-wal
*.sqlite
*.sqlite-journal
*.sqlite-wal
claude-flow
claude-flow.bat
claude-flow.ps1
hive-mind-prompt-*.txt

# Personal development files (development branch specific)
personal-dev/
*.personal.*
*.experimental.*
**/personal/
.dev-personal/
