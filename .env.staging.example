# MediaNest Staging Environment Configuration
# Copy this file to .env.staging and fill in your staging values

# ============================================================================
# STAGING ENVIRONMENT SECRETS - Generate unique values for staging
# ============================================================================
# SECURITY WARNING: Use different secrets from production
# These should be test-safe but still secure values

# JWT signing secret for staging authentication
# Generate with: openssl rand -base64 32
JWT_SECRET=<generate-staging-jwt-secret>

# JWT secret for rolling key rotation (optional)
JWT_SECRET_ROTATION=<optional-staging-rotation-key>

# Application-level encryption key for staging data
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=<generate-staging-encryption-key>

# ============================================================================
# STAGING SERVER CONFIGURATION
# ============================================================================
# Node environment - always 'production' for staging to test production configs
NODE_ENV=production

# Staging server port (typically different from production)
PORT=3001

# ============================================================================
# STAGING DATABASE CONFIGURATION
# ============================================================================
# Staging PostgreSQL connection
# Use separate database from production
# Example: postgresql://medianest_staging:password@staging-db:5432/medianest_staging
DATABASE_URL=postgresql://staging_user:staging_password@localhost:5432/medianest_staging

# ============================================================================
# PLEX STAGING CONFIGURATION
# ============================================================================
# Use test Plex server or limited-access account for staging
PLEX_TOKEN=<staging-plex-token>
PLEX_SERVER_URL=http://staging-plex:32400
PLEX_ENABLED=true
PLEX_DEFAULT_TOKEN=<staging-default-plex-token>

# ============================================================================
# EXTERNAL SERVICES - STAGING KEYS
# ============================================================================
# Use test/development API keys with limited quotas

# YouTube API - use development key with limited quota
YOUTUBE_API_KEY=<staging-youtube-api-key>

# TMDB API - use separate key from production
TMDB_API_KEY=<staging-tmdb-api-key>

# Overseerr - staging instance
OVERSEERR_ENABLED=false
OVERSEERR_URL=<staging-overseerr-url>
OVERSEERR_API_KEY=<staging-overseerr-api-key>

# Uptime Kuma - monitor staging services
UPTIME_KUMA_ENABLED=false
UPTIME_KUMA_URL=<staging-uptime-url>
UPTIME_KUMA_USERNAME=<staging-monitor-user>
UPTIME_KUMA_PASSWORD=<staging-monitor-password>

# ============================================================================
# STAGING APPLICATION CONFIGURATION
# ============================================================================
# Staging frontend URLs
ALLOWED_ORIGINS=https://staging.medianest.com,http://localhost:3001
FRONTEND_URL=https://staging.medianest.com

# JWT Configuration for staging
JWT_ISSUER=medianest-staging
JWT_AUDIENCE=medianest-staging-users

# Metrics token for staging monitoring
# Generate with: openssl rand -base64 24
METRICS_TOKEN=<staging-metrics-token>

# Redis for staging (if using)
REDIS_URL=redis://staging-redis:6379
REDIS_PASSWORD=<staging-redis-password>

# ============================================================================
# STAGING-SPECIFIC CONFIGURATION
# ============================================================================
# Additional staging-specific settings

# Enable debug logging for staging
LOG_LEVEL=debug

# Staging notification settings (if applicable)
SMTP_HOST=smtp.staging.example.com
SMTP_PORT=587
SMTP_USER=staging@medianest.com
SMTP_PASSWORD=<staging-smtp-password>

# Feature flags for staging testing
FEATURE_FLAG_NEW_UI=true
FEATURE_FLAG_BETA_FEATURES=true

# Performance monitoring for staging
NEW_RELIC_APP_NAME=medianest-staging
NEW_RELIC_LICENSE_KEY=<staging-newrelic-key>

# ============================================================================
# DEPLOYMENT NOTES
# ============================================================================
# 1. Copy this file to .env.staging on the staging server
# 2. Fill in all staging-specific values
# 3. Ensure database and Redis are accessible from staging
# 4. Verify Plex server connectivity
# 5. Test external API integrations with staging keys
# 6. Monitor with staging-specific alerting
# 
# Staging URL: https://staging.medianest.com
# Monitoring: https://monitoring.staging.medianest.com
# 
# IMPORTANT: 
# - Use different secrets from production
# - Test data should be non-sensitive
# - Regular cleanup of staging data recommended
# - Monitor resource usage to prevent cost overruns