# MediaNest Base Docker Compose Configuration
# Common services and base configuration shared across all environments
# Use with environment-specific override files

version: '3.8'

# ===== NETWORKS =====
networks:
  medianest-internal:
    driver: bridge
    internal: false  # Allow external access for development
    ipam:
      config:
        - subnet: 172.25.0.0/24

# ===== VOLUMES =====
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local
  app_logs:
    driver: local

# ===== BASE SERVICES =====
services:
  
  # ===== PostgreSQL Database =====
  postgres:
    image: postgres:16-alpine
    hostname: medianest-postgres
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-medianest}
      POSTGRES_USER: ${POSTGRES_USER:-medianest}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-medianest_password}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C'
      PGDATA: /var/lib/postgresql/data/pgdata
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    
    networks:
      medianest-internal:
        ipv4_address: 172.25.0.10
    
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-medianest} -d ${POSTGRES_DB:-medianest}']
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    # Base resource limits (overridden per environment)
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ===== Redis Cache =====
  redis:
    image: redis:7-alpine
    hostname: medianest-redis
    restart: unless-stopped
    
    command: >
      redis-server
      --appendonly yes
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    
    volumes:
      - redis_data:/data
    
    networks:
      medianest-internal:
        ipv4_address: 172.25.0.11
    
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    
    # Base resource limits
    deploy:
      resources:
        limits:
          memory: 320M
        reservations:
          memory: 128M

  # ===== Application Server =====
  app:
    build:
      context: .
      dockerfile: Dockerfile.consolidated
      target: ${BUILD_TARGET:-backend-production}
      args:
        NODE_ENV: ${NODE_ENV:-production}
        BUILD_TARGET: ${BUILD_TARGET:-backend-production}
        SECURITY_LEVEL: ${SECURITY_LEVEL:-standard}
        OPTIMIZATION_LEVEL: ${OPTIMIZATION_LEVEL:-size}
        ENABLE_MONITORING: ${ENABLE_MONITORING:-false}
        ENABLE_DEBUG: ${ENABLE_DEBUG:-false}
        ENABLE_TELEMETRY: ${ENABLE_TELEMETRY:-false}
        NODE_OPTIONS: ${NODE_OPTIONS:---max-old-space-size=768}
    
    hostname: medianest-app
    restart: unless-stopped
    
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-medianest}:${POSTGRES_PASSWORD:-medianest_password}@postgres:5432/${POSTGRES_DB:-medianest}?connection_limit=20&pool_timeout=30
      REDIS_URL: redis://redis:6379
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      PLEX_CLIENT_ID: ${PLEX_CLIENT_ID}
      PLEX_CLIENT_SECRET: ${PLEX_CLIENT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    
    volumes:
      - uploads:/app/uploads
      - app_logs:/app/logs
    
    networks:
      medianest-internal:
        ipv4_address: 172.25.0.20
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/health || http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    
    # Base resource limits
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

# ===== SHARED CONFIGURATION =====
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"
    compress: "true"

x-restart-policy: &default-restart
  restart: unless-stopped

# ===== ENVIRONMENT VARIABLES TEMPLATE =====
# Copy to .env and customize for your environment
x-env-template: &env-template
  # Database Configuration
  POSTGRES_DB: medianest
  POSTGRES_USER: medianest
  POSTGRES_PASSWORD: secure_password_here
  
  # Redis Configuration  
  REDIS_PASSWORD: redis_password_here
  REDIS_MAX_MEMORY: 256mb
  
  # Application Configuration
  NODE_ENV: production
  BUILD_TARGET: backend-production
  SECURITY_LEVEL: standard
  
  # Authentication
  NEXTAUTH_URL: https://your-domain.com
  NEXTAUTH_SECRET: your_nextauth_secret_here
  JWT_SECRET: your_jwt_secret_here
  ENCRYPTION_KEY: your_encryption_key_here
  
  # Plex Integration
  PLEX_CLIENT_ID: your_plex_client_id
  PLEX_CLIENT_SECRET: your_plex_client_secret
  
  # Monitoring & Debugging
  ENABLE_MONITORING: false
  ENABLE_DEBUG: false
  ENABLE_TELEMETRY: false
  LOG_LEVEL: info