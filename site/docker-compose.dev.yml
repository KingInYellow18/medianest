# MediaNest Development Environment Overrides
# Use with: docker-compose -f docker-compose.base.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  
  # ===== Development Application =====
  app:
    build:
      target: development
      args:
        NODE_ENV: development
        BUILD_TARGET: development
        ENABLE_DEBUG: "true"
        ENABLE_MONITORING: "true"
        ENABLE_TELEMETRY: "false"
    
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: 1
      LOG_LEVEL: debug
      ENABLE_HOT_RELOAD: "true"
      
      # Development database URL
      DATABASE_URL: postgresql://medianest_dev:dev_password@postgres:5432/medianest_dev?connection_limit=10&pool_timeout=20
      
      # Development Redis (no password)
      REDIS_URL: redis://redis:6379/0
    
    # Mount source code for hot reload
    volumes:
      - ./src:/app/src:cached
      - ./backend/src:/app/backend/src:cached
      - ./frontend/src:/app/frontend/src:cached
      - ./shared/src:/app/shared/src:cached
      - ./backend/prisma:/app/backend/prisma:cached
      - uploads:/app/uploads
      - app_logs:/app/logs
      - /app/node_modules  # Anonymous volume for node_modules
      - /app/backend/node_modules
      - /app/frontend/node_modules
      - /app/shared/node_modules
    
    # Expose development ports
    ports:
      - "3000:3000"  # Frontend
      - "3001:3001"  # Backend API
      - "9229:9229"  # Node.js debug port
      - "5555:5555"  # Prisma Studio
    
    # Development command override
    command: npm run dev
    
    # Relaxed resource limits for development
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # ===== Development Database =====
  postgres:
    environment:
      POSTGRES_DB: medianest_dev
      POSTGRES_USER: medianest_dev
      POSTGRES_PASSWORD: dev_password
      # Enable verbose logging for development
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C --auth-host=md5'
    
    # Expose database port for external tools
    ports:
      - "5432:5432"
    
    # Development-specific initialization
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./infrastructure/database/dev-seeds.sql:/docker-entrypoint-initdb.d/02-dev-data.sql:ro
    
    # Relaxed resource limits
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

  # ===== Development Redis =====
  redis:
    # Development Redis configuration (no password)
    command: >
      redis-server
      --appendonly yes
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --loglevel debug
    
    # Expose Redis port for external tools
    ports:
      - "6379:6379"

  # ===== Development Services =====
  
  # Mail catcher for testing emails
  mailcatcher:
    image: mailhog/mailhog:latest
    hostname: medianest-mailcatcher
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    networks:
      - medianest-internal
    profiles:
      - dev-tools

  # Adminer for database management
  adminer:
    image: adminer:4.8.1
    hostname: medianest-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    networks:
      - medianest-internal
    depends_on:
      - postgres
    profiles:
      - dev-tools

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    hostname: medianest-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: redis:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    networks:
      - medianest-internal
    depends_on:
      - redis
    profiles:
      - dev-tools

  # File browser for uploads management
  filebrowser:
    image: filebrowser/filebrowser:latest
    hostname: medianest-filebrowser
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - uploads:/srv/uploads
      - ./config/filebrowser.json:/config/settings.json
    networks:
      - medianest-internal
    profiles:
      - dev-tools

  # Development proxy for API testing
  nginx-dev:
    image: nginx:alpine
    hostname: medianest-nginx-dev
    ports:
      - "8000:80"
    volumes:
      - ./config/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - medianest-internal
    depends_on:
      - app
    profiles:
      - dev-tools

# ===== Development Network Overrides =====
networks:
  medianest-internal:
    # Allow external access in development
    internal: false

# ===== Development Volume Overrides =====
volumes:
  # Use bind mounts for faster development
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local
  app_logs:
    driver: local

# ===== Development Environment Template =====
x-dev-env-template: &dev-env-template
  # Database Configuration
  POSTGRES_DB: medianest_dev
  POSTGRES_USER: medianest_dev
  POSTGRES_PASSWORD: dev_password
  
  # Redis Configuration (no password in dev)
  REDIS_PASSWORD: ""
  REDIS_MAX_MEMORY: 128mb
  
  # Application Configuration
  NODE_ENV: development
  BUILD_TARGET: development
  SECURITY_LEVEL: standard
  LOG_LEVEL: debug
  
  # Development URLs
  NEXTAUTH_URL: http://localhost:3000
  
  # Development secrets (non-secure)
  NEXTAUTH_SECRET: dev_nextauth_secret_not_secure
  JWT_SECRET: dev_jwt_secret_not_secure
  ENCRYPTION_KEY: dev_encryption_key_not_secure
  
  # Plex Integration (development)
  PLEX_CLIENT_ID: dev_plex_client_id
  PLEX_CLIENT_SECRET: dev_plex_client_secret
  
  # Development Flags
  ENABLE_MONITORING: true
  ENABLE_DEBUG: true
  ENABLE_TELEMETRY: false
  ENABLE_HOT_RELOAD: true
  
  # Development Tools
  ENABLE_ADMINER: true
  ENABLE_MAILCATCHER: true
  ENABLE_REDIS_COMMANDER: true
  ENABLE_FILEBROWSER: true