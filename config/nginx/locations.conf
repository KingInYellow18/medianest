# =============================================================================
# MediaNest Location Configuration
# =============================================================================

# Connection limiting
limit_conn conn_limit_per_ip 20;

# =============================================================================
# API ROUTES (Backend)
# =============================================================================

# API endpoints with rate limiting
location /api/ {
    # Rate limiting for general API access
    limit_req zone=api burst=20 nodelay;
    limit_req_status 429;
    
    # Proxy to backend service
    proxy_pass http://medianest_backend;
    
    # API-specific headers
    proxy_set_header Accept-Encoding "";
    proxy_set_header X-API-Version "v1";
    
    # Enable proxy caching for GET requests
    proxy_cache proxy_cache;
    proxy_cache_methods GET HEAD;
    proxy_cache_valid 200 302 5m;
    proxy_cache_valid 404 1m;
    proxy_cache_bypass $http_authorization;
    proxy_no_cache $http_authorization;
    
    # Cache control headers
    add_header X-Cache-Status $upstream_cache_status always;
    
    # CORS headers for API
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Handle preflight OPTIONS requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
}

# Authentication endpoints with stricter rate limiting
location /api/auth/ {
    limit_req zone=auth burst=5 nodelay;
    limit_req_status 429;
    
    # No caching for auth endpoints
    proxy_cache off;
    proxy_pass http://medianest_backend;
    
    # Security headers for authentication
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# File upload endpoints with special handling
location /api/upload/ {
    limit_req zone=upload burst=3 nodelay;
    limit_req_status 429;
    
    # Increased timeouts and body size for file uploads
    client_max_body_size 100M;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    
    # Disable proxy buffering for uploads
    proxy_request_buffering off;
    proxy_buffering off;
    
    proxy_pass http://medianest_backend;
}

# WebSocket connections for real-time features
location /api/ws/ {
    proxy_pass http://medianest_backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    
    # WebSocket-specific timeouts
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
}

# Health check endpoint (backend)
location /api/health {
    access_log off;
    proxy_pass http://medianest_backend;
    proxy_cache off;
}

# =============================================================================
# STATIC FILE SERVING
# =============================================================================

# Frontend static assets with aggressive caching
location /_next/static/ {
    proxy_pass http://medianest_frontend;
    
    # Cache static assets for 1 year
    proxy_cache static_cache;
    proxy_cache_valid 200 302 1y;
    
    # Set caching headers
    add_header Cache-Control "public, immutable, max-age=31536000";
    add_header X-Cache-Status $upstream_cache_status always;
    
    # Compression for static assets
    gzip_static on;
}

# Public static files
location /static/ {
    proxy_pass http://medianest_frontend;
    
    # Cache public static files for 1 week
    proxy_cache static_cache;
    proxy_cache_valid 200 302 1w;
    
    add_header Cache-Control "public, max-age=604800";
    add_header X-Cache-Status $upstream_cache_status always;
}

# Media files with optimized serving
location /media/ {
    proxy_pass http://medianest_backend;
    
    # Cache media files
    proxy_cache static_cache;
    proxy_cache_valid 200 302 1d;
    
    # Set appropriate headers for media
    add_header Cache-Control "public, max-age=86400";
    add_header X-Cache-Status $upstream_cache_status always;
    
    # Enable range requests for media streaming
    proxy_force_ranges on;
}

# =============================================================================
# FRONTEND APPLICATION
# =============================================================================

# Next.js frontend application
location / {
    # Rate limiting for general page access
    limit_req zone=general burst=50 nodelay;
    
    proxy_pass http://medianest_frontend;
    
    # Next.js specific headers
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    
    # Cache HTML pages for short duration
    proxy_cache proxy_cache;
    proxy_cache_valid 200 302 5m;
    proxy_cache_bypass $http_authorization $cookie_session;
    proxy_no_cache $http_authorization $cookie_session;
    
    # Set cache headers
    add_header X-Cache-Status $upstream_cache_status always;
    add_header Cache-Control "public, max-age=300" always;
}

# =============================================================================
# SECURITY AND MONITORING
# =============================================================================

# Deny access to sensitive files
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}

location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
}

# Block common exploit attempts
location ~* "(eval\()|(<script|<iframe|<object|<embed)" {
    deny all;
    access_log off;
    return 444;
}

# Monitoring endpoints
location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    allow 172.16.0.0/12;  # Docker networks
    deny all;
}

# Metrics endpoint for monitoring
location /metrics {
    access_log off;
    allow 127.0.0.1;
    allow 172.16.0.0/12;  # Docker networks
    deny all;
    
    # Return basic metrics
    return 200 "# MediaNest Nginx Metrics\nnginx_up 1\n";
    add_header Content-Type "text/plain; charset=utf-8";
}

# =============================================================================
# ERROR PAGES
# =============================================================================

# Custom error pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

# Error page locations
location = /404.html {
    root /usr/share/nginx/html;
    internal;
}

location = /50x.html {
    root /usr/share/nginx/html;
    internal;
}

# Rate limit error page
error_page 429 /429.html;
location = /429.html {
    root /usr/share/nginx/html;
    internal;
}