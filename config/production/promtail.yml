# Promtail Configuration for MediaNest Production Log Collection
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Application logs
  - job_name: medianest-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: medianest-app
          environment: production
          service: application
          __path__: /var/log/app/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            correlation_id: correlation_id
            user_id: user_id
            ip: ip
            method: method
            url: url
            status_code: status_code
            response_time: response_time
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          correlation_id:
          user_id:
          method:
          status_code:

  # System logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          environment: production
          service: system
          __path__: /var/log/host/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\S+\s+\S+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
      - labels:
          hostname:
          service:

  # Docker container logs
  - job_name: docker-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            message: log
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          environment: production
          service: nginx
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+)\s+-\s+(?P<remote_user>\S+)\s+\[(?P<time_local>[^\]]+)\]\s+"(?P<method>\S+)\s+(?P<request_uri>\S+)\s+(?P<server_protocol>\S+)"\s+(?P<status>\S+)\s+(?P<body_bytes_sent>\S+)\s+"(?P<http_referer>[^"]+)"\s+"(?P<http_user_agent>[^"]+)"'
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'
      - labels:
          method:
          status:
          remote_addr:

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          environment: production
          service: nginx
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2})\s+\[(?P<level>\w+)\]\s+(?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'
      - labels:
          level: