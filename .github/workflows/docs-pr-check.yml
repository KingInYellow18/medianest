name: Documentation PR Check

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements.txt'
      - 'scripts/build-docs.sh'

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'

jobs:
  # PR validation
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            docs
            feat
            fix
            refactor
            style

      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const additions = pr.additions;
            const deletions = pr.deletions;
            const changes = additions + deletions;

            if (changes > 2000) {
              core.setFailed(`PR is too large (${changes} changes). Consider breaking it into smaller PRs.`);
            }

            if (pr.changed_files > 50) {
              core.setFailed(`PR changes too many files (${pr.changed_files}). Consider breaking it into smaller PRs.`);
            }

  # Documentation diff analysis
  diff-analysis:
    name: Documentation Diff Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install mkdocs-material mkdocs-git-revision-date-localized-plugin mkdocs-minify-plugin

      - name: Analyze documentation changes
        run: |
          python scripts/analyze-docs-diff.py > diff-analysis.md

      - name: Comment on PR with analysis
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const analysis = fs.readFileSync('diff-analysis.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Documentation Analysis\n\n${analysis}`
            });

  # Quick quality checks for PRs
  quick-checks:
    name: Quick Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install mkdocs-material yamllint
          npm install -g markdownlint-cli2 markdown-link-check

      - name: Quick markdown lint
        run: |
          # Only check changed files
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.md$' | xargs markdownlint-cli2 || true

      - name: Quick YAML validation
        run: yamllint mkdocs.yml

      - name: Check for broken internal links
        run: |
          python scripts/quick-link-check.py

      - name: Validate image references in changed files
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.md$' | xargs python scripts/validate-images.py || true

      - name: Check for missing alt text
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.md$' | xargs python scripts/check-alt-text.py

  # Build preview
  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install mkdocs-material mkdocs-git-revision-date-localized-plugin mkdocs-minify-plugin

      - name: Build documentation
        run: |
          mkdocs build --strict

      - name: Upload preview
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview-${{ github.event.pull_request.number }}
          path: site/

      - name: Generate preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📖 Documentation Preview\n\nA preview build has been generated for this PR.\n\n[Download Preview Build](${artifactUrl})\n\n⚠️ This is a static build. Download and serve locally to preview changes.`
            });

  # Accessibility check
  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: build-preview
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download preview build
        uses: actions/download-artifact@v4
        with:
          name: docs-preview-${{ github.event.pull_request.number }}
          path: site/

      - name: Install accessibility testing tools
        run: |
          npm install -g @axe-core/cli http-server

      - name: Start server
        run: |
          npx http-server site -p 8080 &
          sleep 5

      - name: Run accessibility tests
        run: |
          axe http://localhost:8080 --exit

      - name: Check color contrast
        run: |
          python scripts/check-color-contrast.py site/

  # Performance impact
  performance-impact:
    name: Performance Impact Analysis
    runs-on: ubuntu-latest
    needs: build-preview
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install mkdocs-material mkdocs-git-revision-date-localized-plugin mkdocs-minify-plugin

      - name: Build base documentation
        run: |
          mkdocs build --strict
          mv site site-base

      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Build PR documentation
        run: |
          pip install -r requirements.txt
          pip install mkdocs-material mkdocs-git-revision-date-localized-plugin mkdocs-minify-plugin
          mkdocs build --strict
          mv site site-pr

      - name: Compare build sizes
        run: |
          python scripts/compare-build-sizes.py site-base/ site-pr/ > size-comparison.md

      - name: Comment with performance impact
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const comparison = fs.readFileSync('size-comparison.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📊 Performance Impact\n\n${comparison}`
            });

  # Content review
  content-review:
    name: Automated Content Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install content analysis tools
        run: |
          npm install -g write-good alex textstat-cli

      - name: Analyze writing quality
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.md$' | while read file; do
            if [ -f "$file" ]; then
              echo "## Analysis for $file" >> content-review.md
              echo "" >> content-review.md
              
              echo "### Writing Issues" >> content-review.md
              write-good "$file" >> content-review.md 2>/dev/null || true
              echo "" >> content-review.md
              
              echo "### Inclusive Language" >> content-review.md
              alex "$file" >> content-review.md 2>/dev/null || true
              echo "" >> content-review.md
              
              echo "### Readability" >> content-review.md
              textstat "$file" >> content-review.md 2>/dev/null || true
              echo "" >> content-review.md
              echo "---" >> content-review.md
            fi
          done

      - name: Comment with content review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('content-review.md')) {
              const review = fs.readFileSync('content-review.md', 'utf8');
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ✍️ Content Review\n\n${review}`
              });
            }

  # Final status check
  pr-status:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs:
      [
        pr-validation,
        quick-checks,
        build-preview,
        accessibility-check,
        performance-impact,
        content-review,
      ]
    if: always()
    steps:
      - name: Check all jobs status
        uses: actions/github-script@v7
        with:
          script: |
            const jobs = [
              '${{ needs.pr-validation.result }}',
              '${{ needs.quick-checks.result }}',
              '${{ needs.build-preview.result }}',
              '${{ needs.accessibility-check.result }}',
              '${{ needs.performance-impact.result }}',
              '${{ needs.content-review.result }}'
            ];

            const failed = jobs.filter(job => job === 'failure').length;
            const cancelled = jobs.filter(job => job === 'cancelled').length;

            let status = '✅ All documentation checks passed!';
            let emoji = '🎉';

            if (failed > 0) {
              status = `❌ ${failed} documentation check(s) failed`;
              emoji = '🚨';
            } else if (cancelled > 0) {
              status = `⚠️ ${cancelled} documentation check(s) were cancelled`;
              emoji = '⚠️';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ${emoji} Documentation PR Status\n\n${status}\n\n### Job Results\n- PR Validation: ${{ needs.pr-validation.result }}\n- Quick Checks: ${{ needs.quick-checks.result }}\n- Build Preview: ${{ needs.build-preview.result }}\n- Accessibility: ${{ needs.accessibility-check.result }}\n- Performance Impact: ${{ needs.performance-impact.result }}\n- Content Review: ${{ needs.content-review.result }}`
            });

            if (failed > 0) {
              core.setFailed('Some documentation checks failed');
            }
