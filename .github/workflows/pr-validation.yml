name: 'PR Validation - MediaNest E2E'

on:
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_VERSION: '1.55.0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 'Setup & Validate'
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changes.outputs.files }}
      test-matrix: ${{ steps.test-selection.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Get changed files
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.(ts|tsx|js|jsx)$' | tr '\n' ',' | sed 's/,$//')
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Initialize HIVE-MIND Session
        run: |
          cd .medianest-e2e
          npx claude-flow@alpha hooks pre-task --description "PR Validation: ${{ github.event.pull_request.title }}"
          npx claude-flow@alpha hooks session-restore --session-id "pr-${{ github.event.number }}"

      - name: Intelligent Test Selection
        id: test-selection
        run: |
          cd .medianest-e2e
          node -e "
          const { HiveCICoordinator } = require('./utils/hive-ci-coordinator.ts');
          const coordinator = new HiveCICoordinator('pr-${{ github.event.number }}');
          coordinator.selectIntelligentTestSuite('${{ steps.changes.outputs.files }}'.split(','))
            .then(tests => console.log('matrix=' + JSON.stringify({ include: tests.map(t => ({ test: t })) })));
          " >> $GITHUB_OUTPUT

  smoke-tests:
    name: 'Smoke Tests'
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium-desktop, firefox-desktop]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install ${{ matrix.browser }}

      - name: Start servers
        run: |
          npm run build &
          npm run start &
          sleep 30

      - name: Run smoke tests
        run: |
          cd .medianest-e2e
          npx playwright test --project=${{ matrix.browser }} --grep="@smoke" --reporter=json,html,junit
        env:
          CI: true
          BASE_URL: http://localhost:3000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-results-${{ matrix.browser }}
          path: |
            .medianest-e2e/reports/
            .medianest-e2e/test-results/
          retention-days: 7

      - name: Update HIVE memory
        if: always()
        run: |
          cd .medianest-e2e
          npx claude-flow@alpha hooks post-edit --file "test-results" --memory-key "pr-${{ github.event.number }}/smoke/${{ matrix.browser }}"

  critical-path-tests:
    name: 'Critical Path Tests'
    runs-on: ubuntu-latest
    needs: [setup, smoke-tests]
    if: needs.smoke-tests.result == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Start servers
        run: |
          npm run build &
          npm run start &
          sleep 30

      - name: Run critical path tests
        run: |
          cd .medianest-e2e
          npx playwright test --project=chromium-desktop --grep="@critical" --reporter=json,html

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: critical-path-results
          path: |
            .medianest-e2e/reports/
            .medianest-e2e/test-results/

  accessibility-check:
    name: 'Accessibility Validation'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install chromium

      - name: Start servers
        run: |
          npm run build &
          npm run start &
          sleep 30

      - name: Run accessibility tests
        run: |
          cd .medianest-e2e
          npx playwright test --project=accessibility --grep="@accessibility" --reporter=json,html

      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-results
          path: |
            .medianest-e2e/reports/accessibility/
            .medianest-e2e/test-results/

  report:
    name: 'Generate Report'
    runs-on: ubuntu-latest
    needs: [setup, smoke-tests, critical-path-tests, accessibility-check]
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: .medianest-e2e/artifacts/

      - name: Generate executive summary
        run: |
          cd .medianest-e2e
          node -e "
          const fs = require('fs');
          const { HiveCICoordinator } = require('./utils/hive-ci-coordinator.ts');
          const coordinator = new HiveCICoordinator('pr-${{ github.event.number }}');

          // Generate comprehensive report
          coordinator.generateExecutiveSummary({
            sessionId: 'pr-${{ github.event.number }}',
            buildNumber: '${{ github.run_number }}',
            branch: '${{ github.head_ref }}',
            commitSha: '${{ github.sha }}',
            timestamp: new Date().toISOString(),
            environment: 'pr-validation',
            testMatrix: ['@smoke', '@critical', '@accessibility'],
            results: [],
            metrics: coordinator.initializeMetrics(),
            baseline: {}
          }).then(summary => {
            fs.writeFileSync('reports/executive-summary.md', summary);
            console.log('ðŸ“Š Executive summary generated');
          });
          "

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('.medianest-e2e/reports/executive-summary.md', 'utf8');

            const comment = `## ðŸŽ­ MediaNest E2E Test Results

            ${summary}

            ### ðŸ“Š Test Artifacts
            - [HTML Report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Accessibility Report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            *Automated by HIVE-MIND CI System*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Finalize HIVE session
        run: |
          cd .medianest-e2e
          npx claude-flow@alpha hooks post-task --task-id "pr-${{ github.event.number }}"
          npx claude-flow@alpha hooks session-end --export-metrics true
