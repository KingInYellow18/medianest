name: Branch Protection & Policy Enforcement
# Automated branch protection rules, merge policies, and compliance checks

on:
  push:
    branches: [main, development, test, dev]
  pull_request:
    branches: [main, development, test, dev]
  workflow_dispatch:
    inputs:
      action:
        description: 'Protection action to perform'
        required: true
        type: choice
        options:
          - validate-rules
          - update-protection
          - audit-compliance
          - emergency-override

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read
  pull-requests: write
  checks: write
  repository-projects: write

jobs:
  protection-validation:
    name: Branch Protection Validation
    runs-on: ubuntu-latest
    outputs:
      protection-status: ${{ steps.check-protection.outputs.status }}
      compliance-score: ${{ steps.compliance-check.outputs.score }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check branch protection rules
        id: check-protection
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Checking branch protection rules..."
          
          protected_branches=("main" "development" "test")
          protection_status="compliant"
          
          for branch in "${protected_branches[@]}"; do
            if gh api repos/${{ github.repository }}/branches/$branch/protection >/dev/null 2>&1; then
              echo "✅ Branch $branch is protected"
            else
              echo "❌ Branch $branch is NOT protected"
              protection_status="non-compliant"
            fi
          done
          
          echo "status=$protection_status" >> $GITHUB_OUTPUT

      - name: Calculate compliance score
        id: compliance-check
        run: |
          protection_status="${{ steps.check-protection.outputs.status }}"
          score=100
          
          if [[ "$protection_status" == "non-compliant" ]]; then
            score=$((score - 40))
          fi
          
          if [[ ! -f ".github/CODEOWNERS" ]]; then
            score=$((score - 10))
          fi
          
          echo "score=$score" >> $GITHUB_OUTPUT
          echo "📊 Compliance score: $score/100"

  merge-policy-check:
    name: Merge Policy Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Validate merge policy
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number="${{ github.event.pull_request.number }}"
          title="${{ github.event.pull_request.title }}"
          
          echo "🔍 Validating merge policy for PR #$pr_number"
          
          if [[ "$title" =~ ^(feat|fix|docs|style|refactor|test|chore|ci)(\(.+\))?: ]]; then
            echo "✅ PR title follows conventional format"
          else
            echo "❌ PR title should follow conventional commit format"
          fi

  compliance-audit:
    name: Compliance Audit
    runs-on: ubuntu-latest 
    needs: [protection-validation]
    if: always()
    steps:
      - name: Generate compliance report
        run: |
          compliance_score="${{ needs.protection-validation.outputs.compliance-score || 0 }}"
          
          echo "## 🛡️ Branch Protection Compliance Report" >> $GITHUB_STEP_SUMMARY
          echo "**Compliance Score:** $compliance_score/100" >> $GITHUB_STEP_SUMMARY
          
          if [[ $compliance_score -ge 90 ]]; then
            echo "### ✅ Excellent Compliance" >> $GITHUB_STEP_SUMMARY
          elif [[ $compliance_score -ge 70 ]]; then
            echo "### ⚠️ Good Compliance" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Needs Improvement" >> $GITHUB_STEP_SUMMARY
          fi