name: Visual Regression Testing

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'frontend/**'
      - '.storybook/**'
      - '\!frontend/docs/**'
      - '\!frontend/README*.md'
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.storybook/**'
  workflow_dispatch:
    inputs:
      force_baseline:
        description: 'Force update visual baselines'
        required: false
        default: false
        type: boolean

jobs:
  visual-tests:
    name: Run Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --prefer-offline --no-audit

      - name: Type check
        run: |
          cd frontend
          npm run type-check

      - name: Lint code
        run: |
          cd frontend
          npm run lint

      - name: Build Storybook
        run: |
          cd frontend
          npm run build-storybook

      - name: Run Chromatic Visual Tests
        uses: chromaui/action@v13
        with:
          projectToken: \${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: frontend
          buildScriptName: build-storybook
          onlyChanged: true
          autoAcceptChanges: \${{ github.ref == 'refs/heads/main' }}
          exitZeroOnChanges: \${{ github.event_name == 'pull_request' }}

  accessibility-tests:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: visual-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --prefer-offline --no-audit

      - name: Build Storybook
        run: |
          cd frontend
          npm run build-storybook

      - name: Run accessibility tests
        run: |
          cd frontend
          npm install --no-save @axe-core/cli http-server
          npx http-server storybook-static -p 6006 &
          SERVER_PID=\$\!
          sleep 5
          npx axe http://localhost:6006 --exit || true
          kill \$SERVER_PID

  story-coverage:
    name: Story Coverage Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check story coverage
        run: |
          cd frontend
          COMPONENT_FILES=\$(find src/components -name "*.tsx" -not -name "*.stories.tsx" -not -name "*.test.tsx" | wc -l)
          STORY_FILES=\$(find src/components -name "*.stories.tsx" | wc -l)
          COVERAGE=\$((STORY_FILES * 100 / COMPONENT_FILES))

          echo "Component files: \$COMPONENT_FILES"
          echo "Story files: \$STORY_FILES"
          echo "Coverage: \$COVERAGE%"

          if [ \$COVERAGE -lt 80 ]; then
            echo "❌ Story coverage (\$COVERAGE%) is below minimum threshold (80%)"
            exit 1
          else
            echo "✅ Story coverage (\$COVERAGE%) meets minimum threshold (80%)"
          fi
          EOF
