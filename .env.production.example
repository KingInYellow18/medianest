# MediaNest Production Environment Configuration
# ================================================
# 
# CRITICAL SECURITY NOTES:
# 1. NEVER commit this file with real values to version control
# 2. Use strong, unique passwords for ALL services
# 3. Regenerate ALL secrets before production deployment
# 4. Use environment-specific secrets management (AWS Secrets Manager, etc.)
# 5. Enable HTTPS/TLS for ALL external communications
# 
# Quick Production Setup:
# 1. cp .env.production.example .env.production
# 2. npm run generate-secrets (generates secure random secrets)
# 3. Update all placeholder values with real production values
# 4. Review and test ALL security settings
# 5. Use secrets management system in production

# ================================================
# APPLICATION CONFIGURATION
# ================================================
NODE_ENV=production
PORT=4000
BACKEND_PORT=4000

# ================================================
# SECURITY CONFIGURATION
# ================================================

# JWT Configuration - CRITICAL: Use strong secrets
JWT_SECRET=REPLACE_WITH_SECURE_64_CHAR_SECRET_FROM_GENERATE_SECRETS_SCRIPT
JWT_ISSUER=medianest-production
JWT_AUDIENCE=medianest-production-users

# NextAuth Configuration
NEXTAUTH_URL=https://your-production-domain.com
NEXTAUTH_SECRET=REPLACE_WITH_SECURE_64_CHAR_SECRET_FROM_GENERATE_SECRETS_SCRIPT

# Encryption key for sensitive data
ENCRYPTION_KEY=REPLACE_WITH_SECURE_64_CHAR_SECRET_FROM_GENERATE_SECRETS_SCRIPT

# Rate Limiting & Security
ALLOWED_ORIGINS=https://your-production-domain.com,https://your-cdn-domain.com
MAX_REQUEST_SIZE=10mb
API_RATE_LIMIT=50
GLOBAL_RATE_LIMIT=100

# Metrics endpoint protection (use strong token)
METRICS_TOKEN=REPLACE_WITH_SECURE_METRICS_TOKEN_FROM_GENERATE_SECRETS_SCRIPT

# ================================================
# DATABASE CONFIGURATION
# ================================================

# PostgreSQL - Use connection pooling and SSL in production
DATABASE_URL=postgresql://medianest_prod:STRONG_DB_PASSWORD@your-postgres-host:5432/medianest_prod?sslmode=require&connection_limit=20&pool_timeout=30

# Database credentials (for Docker or separate config)
POSTGRES_DB=medianest_prod
POSTGRES_USER=medianest_prod  
POSTGRES_PASSWORD=REPLACE_WITH_STRONG_DATABASE_PASSWORD

# ================================================
# REDIS CONFIGURATION
# ================================================

# Redis - Use AUTH and SSL in production
REDIS_URL=redis://username:STRONG_REDIS_PASSWORD@your-redis-host:6379
# Alternative individual settings:
# REDIS_HOST=your-redis-host
# REDIS_PORT=6379
# REDIS_PASSWORD=STRONG_REDIS_PASSWORD
# REDIS_TLS=true

# ================================================
# FRONTEND CONFIGURATION
# ================================================
FRONTEND_URL=https://your-production-domain.com
NEXT_PUBLIC_APP_URL=https://your-production-domain.com
NEXT_PUBLIC_API_URL=https://your-production-domain.com/api

# ================================================
# PLEX INTEGRATION
# ================================================

# Plex OAuth - Get from https://www.plex.tv/api/v2/pins
PLEX_CLIENT_ID=MediaNest-Production
PLEX_CLIENT_SECRET=REPLACE_WITH_REAL_PLEX_CLIENT_SECRET

# Plex Server Configuration (configured in Admin UI)
PLEX_ENABLED=true
PLEX_SERVER_URL=https://your-plex-server.your-domain.com:32400
PLEX_DEFAULT_TOKEN=REPLACE_WITH_PLEX_SERVER_TOKEN

# ================================================
# EXTERNAL SERVICES
# ================================================

# Overseerr Integration
OVERSEERR_ENABLED=true
OVERSEERR_URL=https://your-overseerr.your-domain.com
OVERSEERR_API_KEY=REPLACE_WITH_OVERSEERR_API_KEY

# Uptime Kuma Monitoring
UPTIME_KUMA_ENABLED=true
UPTIME_KUMA_URL=https://your-uptime-kuma.your-domain.com
UPTIME_KUMA_USERNAME=your_monitoring_username
UPTIME_KUMA_PASSWORD=STRONG_UPTIME_KUMA_PASSWORD

# ================================================
# MEDIA CONFIGURATION
# ================================================

# YouTube Downloads
YOUTUBE_DOWNLOAD_PATH=/secure/media/youtube
YOUTUBE_RATE_LIMIT=3

# ================================================
# LOGGING & MONITORING
# ================================================

# Logging level - use 'warn' or 'error' in production for performance
LOG_LEVEL=warn

# Log retention (days)
LOG_RETENTION_DAYS=30

# Enable structured logging
STRUCTURED_LOGGING=true

# External log shipping (optional)
# ELASTICSEARCH_URL=https://your-elasticsearch:9200
# ELASTICSEARCH_API_KEY=your_elasticsearch_key

# ================================================
# SSL/TLS CONFIGURATION
# ================================================

# SSL Configuration (if handling SSL in Node.js)
# SSL_KEY_PATH=/path/to/private-key.pem  
# SSL_CERT_PATH=/path/to/certificate.pem
# SSL_CA_PATH=/path/to/ca-bundle.pem

# Force HTTPS redirects
FORCE_HTTPS=true

# HSTS Max Age (1 year)
HSTS_MAX_AGE=31536000

# ================================================
# BACKUP & RECOVERY
# ================================================

# Database backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_KEY=REPLACE_WITH_BACKUP_ENCRYPTION_KEY

# Backup storage (S3, GCS, etc.)
BACKUP_STORAGE_TYPE=s3
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=your-aws-region
BACKUP_S3_ACCESS_KEY=YOUR_S3_ACCESS_KEY
BACKUP_S3_SECRET_KEY=YOUR_S3_SECRET_KEY

# ================================================
# PERFORMANCE & SCALING
# ================================================

# Node.js performance settings
NODE_OPTIONS=--max-old-space-size=2048 --optimize-for-size

# Cluster mode (set to number of CPU cores)
CLUSTER_WORKERS=4

# Connection pool sizes
DB_POOL_MIN=5
DB_POOL_MAX=20
REDIS_POOL_SIZE=10

# Cache settings
CACHE_TTL=3600
CACHE_MAX_ITEMS=10000

# ================================================
# SECURITY MONITORING
# ================================================

# Security event logging
SECURITY_LOGGING_ENABLED=true
SECURITY_LOG_LEVEL=warn

# Intrusion detection
FAIL2BAN_ENABLED=true
MAX_LOGIN_ATTEMPTS=5
LOGIN_ATTEMPT_WINDOW=900

# Content Security Policy
CSP_REPORT_URI=https://your-csp-report-endpoint.com/report

# ================================================
# ADMIN CONFIGURATION
# ================================================

# Initial admin user (only used on first deployment)
ADMIN_USERNAME=your_admin_username
ADMIN_PASSWORD=REPLACE_WITH_STRONG_ADMIN_PASSWORD

# Admin session timeout (minutes)
ADMIN_SESSION_TIMEOUT=30

# Require 2FA for admin accounts
ADMIN_REQUIRE_2FA=true

# ================================================
# FEATURE FLAGS
# ================================================

# Enable/disable features
FEATURE_USER_REGISTRATION=false
FEATURE_PUBLIC_API=false
FEATURE_METRICS_ENDPOINT=true
FEATURE_DEBUG_ENDPOINTS=false

# ================================================
# CONTAINER/DEPLOYMENT SPECIFIC
# ================================================

# Health check configuration
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=30000

# Graceful shutdown timeout (ms)
SHUTDOWN_TIMEOUT=10000

# Process management
PM2_INSTANCES=4
PM2_MAX_MEMORY_RESTART=500M

# ================================================
# DEVELOPMENT OVERRIDES
# ================================================
# These should NOT be set in production!
# Uncomment only for production debugging (and remove after)

# DEBUG_ENABLED=false
# VERBOSE_LOGGING=false
# ENABLE_CORS_ALL=false
# DISABLE_RATE_LIMITING=false
# SKIP_AUTH_CHECK=false

# ================================================
# LEGACY/DEPRECATED SETTINGS
# ================================================
# Keep for backward compatibility during migration

# Legacy database URL format (if needed)
# DATABASE_URL_LEGACY=postgres://user:pass@host:port/db

# ================================================
# VALIDATION NOTES
# ================================================
#
# Before going live, verify:
# ✅ All REPLACE_WITH_* values have been updated
# ✅ All passwords are strong (20+ characters, mixed case, numbers, symbols)
# ✅ Database and Redis use SSL/TLS
# ✅ CORS origins are restrictive
# ✅ Rate limits are appropriate for your traffic
# ✅ Log levels are appropriate (warn/error for production)
# ✅ Backup configuration is tested
# ✅ Monitoring and alerting is configured
# ✅ Security headers are enabled
# ✅ All external URLs use HTTPS
# ✅ Secrets are managed via secure secrets management system
#
# ================================================